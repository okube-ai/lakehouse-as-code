name: pl-stock-prices
dataframe_type: POLARS

# --------------------------------------------------------------------------- #
# Nodes                                                                       #
# --------------------------------------------------------------------------- #

nodes:

  # ------------------------------------------------------------------------- #
  # Stock Prices                                                              #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_prices
    timestamp_key: created_at
    layer: BRONZE
    source:
      path: ./data/stock_prices.json
      format: JSON
      multiline: True
      as_stream: false
    sink:
      path: ./data/brz_stock_prices.parquet
      format: PARQUET

  - name: slv_stock_prices
    layer: SILVER
    timestamp_key: created_at
    expectations:
      - name: positive_price
        expression: open > 0
        action: FAIL
      - name: recent_price
        expression: created_at > '2023-01-01'
        action: DROP
    source:
      node_name: brz_stock_prices
      as_stream: false
    sink:
      path: ./data/slv_stock_prices.parquet
      format: PARQUET
    transformer:
      nodes:
        - with_column:
            name: created_at
            type: timestamp
            expr: pl.expr.laktory.sql_expr('data._created_at')

        - with_column:
            name: symbol
            type: string
            expr: pl.expr.laktory.sql_expr('data.symbol')

        - with_column:
            name: name
            type: string
            expr: pl.expr.laktory.sql_expr('data.symbol')

        - with_column:
            name: open
            type: double
            expr: pl.expr.laktory.sql_expr('data.open')

        - with_column:
            name: close
            type: double
            expr: pl.expr.laktory.sql_expr('data.close')

        - with_column:
            name: low
            type: double
            expr: pl.expr.laktory.sql_expr('data.low')

        - with_column:
            name: high
            type: double
            expr: pl.expr.laktory.sql_expr('data.high')

  # ------------------------------------------------------------------------- #
  # Stock Metadata                                                            #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_metadata
    layer: BRONZE
    source:
      path: ./data/stock_metadata.json
      format: JSON
      multiline: True
      as_stream: false
    sink:
      path: ./data/brz_stock_metadata.parquet
      format: PARQUET

  - name: slv_stock_metadata
    layer: SILVER
    source:
      node_name: brz_stock_metadata
    sink:
      path: ./data/slv_stock_metadata.parquet
      format: PARQUET
    transformer:
      nodes:
        - with_column:
            name: symbol
            type: string
            expr: pl.expr.laktory.sql_expr('data.symbol')

        - with_column:
            name: currency
            type: string
            expr: pl.expr.laktory.sql_expr('data.currency')

        - with_column:
            name: first_traded
            type: timestamp
            sql_expr: data.firstTradeDate

  # ------------------------------------------------------------------------- #
  # Silver Joins                                                              #
  # ------------------------------------------------------------------------- #

  - name: slv_stocks
    layer: SILVER
    drop_source_columns: False
    source:
      node_name: slv_stock_prices
      as_stream: false
    sink:
      path: ./data/slv_stocks.parquet
      format: PARQUET
    transformer:
      nodes:
        - func_name: laktory.smart_join
          func_kwargs:
            other:
              node_name: slv_stock_metadata
              selects:
                - symbol
                - currency
                - first_traded
            "on":
              - symbol
        - with_column:
            name: day_id
            expr: pl.col("created_at").dt.truncate("1d")

  # ------------------------------------------------------------------------- #
  # Gold                                                                      #
  # ------------------------------------------------------------------------- #

  - name: gld_stocks_prices_by_1d
    layer: GOLD
    source:
      node_name: slv_stocks
      as_stream: false
    sink:
      path: ./data/gld_stocks_prices_by_1d.parquet
      format: PARQUET
    transformer:
      nodes:
        - func_name: laktory.groupby_and_agg
          func_kwargs:
            groupby_columns:
              - symbol
              - day_id
            agg_expressions:
              - name: count
                expr: pl.col('symbol').count()
              - name: low
                expr: pl.col('low').min()
              - name: high
                expr: pl.col('high').max()
              - name: open
                expr: pl.col('open').first()
              - name: close
                expr: pl.col('close').last()
