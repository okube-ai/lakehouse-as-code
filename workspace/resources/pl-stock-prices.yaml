name: pl-stock-prices

catalog: ${vars.env}
target: finance
development: ${vars.is_dev}
configuration:
  pipeline_name: pl-stock-prices

## TODO: Uncomment for DEMO
#continuous: True

clusters:
  - name : default
    node_type_id: Standard_DS3_v2
    autoscale:
      min_workers: 1
      max_workers: 2
#    init_scripts:  # TODO: Enable when supported by Databricks
#      - volumes:
#          destination: /Volumes/libraries/default/init_scripts/install_laktory.sh

libraries:
  - notebook:
      path: /.laktory/pipelines/dlt_brz_template.py
  - notebook:
      path: /.laktory/pipelines/dlt_slv_template.py
  - notebook:
      path: /.laktory/pipelines/dlt_slv_star_template.py
  - notebook:
      path: /.laktory/pipelines/dlt_gld_template.py
  - notebook:
      path: /.laktory/pipelines/dlt_gld_stock_performances.py

udfs:
  - module_name: stock_functions
    function_name: symbol_to_name

access_controls:
  - group_name: account users
    permission_level: CAN_VIEW
  - group_name: role-engineers
    permission_level: CAN_RUN

# --------------------------------------------------------------------------- #
# Tables                                                                      #
# --------------------------------------------------------------------------- #

tables:

  # ------------------------------------------------------------------------- #
  # Stock Prices                                                              #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_prices
    timestamp_key: data.created_at
    builder:
      layer: BRONZE
      event_source:
        name: stock_price
        producer:
          name: yahoo-finance


  - name: slv_stock_prices
    timestamp_key: created_at
    expectations:
      - name: positive_price
        expression: open > 0
        action: FAIL
      - name: recent_price
        expression: created_at > '2023-01-01'
        action: DROP
    builder:
      layer: SILVER
      table_source:
        name: brz_stock_prices
    columns:
      - name: created_at
        type: timestamp
        spark_func_name: coalesce
        spark_func_args:
          - data._created_at

      - name: symbol
        type: string
        spark_func_name: coalesce
        spark_func_args:
          - data.symbol

      - name: name
        type: string
        spark_func_name: symbol_to_name
        spark_func_args:
          - data.symbol

      - name: open
        type: double
        spark_func_name: coalesce
        spark_func_args:
          - data.open

      - name: close
        type: double
        spark_func_name: coalesce
        spark_func_args:
          - data.close

      - name: low
        type: double
        spark_func_name: coalesce
        spark_func_args:
          - data.low

      - name: high
        type: double
        spark_func_name: coalesce
        spark_func_args:
          - data.high

#      #TODO: Uncomment for demo
#      - name: volume
#        type: double
#        spark_func_name: coalesce
#        spark_func_args:
#          - data.volume

  # ------------------------------------------------------------------------- #
  # Stock Metadata                                                            #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_metadata
    builder:
      layer: BRONZE
      event_source:
        name: stock_metadata
        read_as_stream: False
        producer:
          name: yahoo-finance

  - name: slv_stock_metadata
    builder:
      layer: SILVER
      table_source:
        name: brz_stock_metadata
        read_as_stream: False
    columns:
      - name: symbol
        type: string
        spark_func_name: coalesce
        spark_func_args:
          - data.symbol

      - name: currency
        type: string
        spark_func_name: coalesce
        spark_func_args:
          - data.currency

      - name: first_traded
        type: timestamp
        spark_func_name: coalesce
        spark_func_args:
          - data.firstTradeDate

  # ------------------------------------------------------------------------- #
  # Silver Star                                                               #
  # ------------------------------------------------------------------------- #

  - name: slv_star_stock_prices
    builder:
      layer: SILVER_STAR
      table_source:
        name: slv_stock_prices
        read_as_stream: True
      joins:
        - other:
            name: slv_stock_metadata
            read_as_stream: False
            selects:
              - symbol
              - currency
              - first_traded
          "on":
            - symbol

  # ------------------------------------------------------------------------- #
  # Gold                                                                      #
  # ------------------------------------------------------------------------- #

  - name: gld_stock_prices_by_1d
    builder:
      layer: GOLD
      table_source:
        name: slv_star_stock_prices
        read_as_stream: True
      aggregation:
        groupby_columns:
          - symbol
        groupby_window:
          time_column: _tstamp
          window_duration: 1 day
        agg_expressions:
          - name: count
            spark_func_name: count
            spark_func_args:
              - symbol
          - name: low
            spark_func_name: min
            spark_func_args:
              - low
          - name: high
            spark_func_name: max
            spark_func_args:
              - high
          - name: open
            spark_func_name: first
            spark_func_args:
              - open
          - name: close
            spark_func_name: last
            spark_func_args:
              - close

  - name: gld_stock_performances
    builder:
      layer: GOLD
      template: STOCK_PERFORMANCES
      table_source:
        name: slv_star_stock_prices
        read_as_stream: False
