name: dlt-stock-prices

dependencies:
  - ${vars.laktory_package}
  - ${vars.wheel_filepath}

orchestrator:
  resource_name: dlt-stock-prices
  type: DATABRICKS_DLT
  serverless: true
  catalog: ${vars.env}
  schema: market_dlt
  development: ${vars.is_dev}

#  clusters:
#    - name : default
#      node_type_id: Standard_DS3_v2
#      autoscale:
#        min_workers: 1
#        max_workers: 2
#
  libraries:
    - notebook:
        path: /.laktory/dlt/dlt_laktory_pl.py

  access_controls:
    - group_name: account users
      permission_level: CAN_VIEW
    - group_name: role-engineers
      permission_level: CAN_RUN

# --------------------------------------------------------------------------- #
# Nodes                                                                       #
# --------------------------------------------------------------------------- #

nodes:

  # ------------------------------------------------------------------------- #
  # Stock Prices                                                              #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_prices
    source:
      path: /Volumes/${vars.env}/sources/landing/events/yahoo-finance/stock_price/
      as_stream: true
      format: JSON
      reader_kwargs:
        cloudFiles.inferColumnTypes: true
    sinks:
    - table_name: brz_stock_prices
      schema_name: yahoo_dlt

  - name: slv_stock_prices
    expectations:
      - name: positive_price
        expr: open > 0
        action: QUARANTINE
      - name: recent_price
        expr: created_at > '2023-01-01'
        action: DROP
    source:
      node_name: brz_stock_prices
      as_stream: true
    sinks:
    - table_name: slv_stock_prices
      schema_name: yahoo_dlt
    - table_name: slv_stock_prices_quarantine
      schema_name: yahoo_dlt
      is_quarantine: True
    transformer:
      nodes:
        - expr: |
            SELECT
              data.created_at AS created_at,
              data.symbol AS symbol,
              data.open AS open,
              data.close AS close,
              data.high AS high,
              data.low AS low,
              data.volume AS volume
            FROM
              {df}
        - func_name: drop_duplicates
          dataframe_api: NATIVE
          func_kwargs:
            subset:
              - symbol
              - created_at

  # ------------------------------------------------------------------------- #
  # Stock Metadata                                                            #
  # ------------------------------------------------------------------------- #

  - name: brz_stock_metadata
    source:
      path: /Volumes/${vars.env}/sources/landing/events/yahoo-finance/stock_metadata/
      format: JSON
    sinks:
    - schema_name: yahoo_dlt
      table_name: brz_stock_metadata

  - name: slv_stock_metadata
    source:
      node_name: brz_stock_metadata
    sinks:
      - pipeline_view_name: slv_stock_metadata
    transformer:
      nodes:
        - func_name: select
          func_kwargs:
            symbol: nw.col("data.symbol").cast(nw.dtypes.String())
            name: nw.col("data.symbol").lake.symbol_to_name().cast(nw.dtypes.String())
            currency: nw.col("data.currency").cast(nw.dtypes.String())
            first_traded: nw.col("data.firstTradeDate").cast(nw.dtypes.Datetime(time_zone="UTC"))

  # ------------------------------------------------------------------------- #
  # Silver Joins                                                              #
  # ------------------------------------------------------------------------- #

  - name: slv_stocks
    source:
      node_name: slv_stock_prices
      as_stream: false
    sinks:
    - table_name: slv_stocks
      schema_name: market_dlt
    transformer:
      nodes:
        - func_name: join
          func_kwargs:
            other:
              node_name: slv_stock_metadata
              selects:
                - symbol
                - name
                - currency
                - first_traded
            "on":
              - symbol

  # ------------------------------------------------------------------------- #
  # Gold                                                                      #
  # ------------------------------------------------------------------------- #

  - name: gld_stock_prices_by_1d
    source:
      node_name: slv_stocks
      as_stream: false
    sinks:
    - table_name: gld_stock_prices_by_1d
    transformer:
      nodes:
        - func_name: with_columns
          func_kwargs:
            day_id: nw.col("created_at").dt.truncate("1d")
        - func_name: laktory.groupby_and_agg
          func_kwargs:
            groupby_columns:
              - symbol
              - day_id
            agg_expressions:
              - expr: nw.col('symbol').count().alias("count")
              - expr: nw.col('low').min().alias("low")
              - expr: nw.col('high').max().alias("high")
              - expr: nw.col('open').min().alias("open")
              - expr: nw.col('close').max().alias("close")
